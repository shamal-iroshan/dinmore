/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import Connector.ServerConnector;
import controller.OrderController;
import java.awt.Color;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import model.OrderModel;
import receiver.OrderReceiver;
import receiverImpl.OrderReceiverImpl;
import java.time.Duration;
import java.time.Instant;

/**
 *
 * @author Shamal
 */
public class Chef extends javax.swing.JFrame implements OrderReceiver<OrderModel> {

    private OrderReceiver orderReceiver;
    private OrderController orderController;
    OrderModel model;
    boolean available = true;
    String id;
    double startTime;
    double endTime;
    Instant start = null;

    /**
     * Creates new form Chef
     */
    public Chef(String id) {
        initComponents();
        this.id = id;
        lblID.setText(id);

        try {

            orderController = ServerConnector.getInstance().getOrderController();
            orderReceiver = new OrderReceiverImpl(this);
            orderController.addReceiver(orderReceiver);

        } catch (NotBoundException | MalformedURLException | RemoteException ex) {
            Logger.getLogger(Chef.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblQty = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        button = new keeptoo.KButton();
        lblID = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblQty.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lblQty.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQty.setText("0");
        jPanel1.add(lblQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 560, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel2.setText("Quantity");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, -1, -1));

        button.setText("Take Order");
        button.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        button.setkAllowGradient(false);
        button.setkBackGroundColor(new java.awt.Color(51, 204, 0));
        button.setkHoverColor(new java.awt.Color(0, 153, 51));
        button.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        button.setkPressedColor(new java.awt.Color(0, 102, 0));
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        jPanel1.add(button, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 520, -1));
        jPanel1.add(lblID, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        try {
            if (button.getText().equals("Take Order")) {
                if (!lblQty.getText().equals("0")) {
                    available = false;
                    model = (OrderModel) orderController.takeOrder();
                    start = Instant.now();
                    orderController.notifyReceivers();
                    button.setText("Finish order");
                    button.kBackGroundColor = new Color(255, 60, 69);
                    button.kHoverColor = new Color(170, 40, 46);
                    button.kPressedColor = new Color(245, 110, 102);
                }

            } else if (button.getText().equals("Finish order")) {

                Instant end = Instant.now();
                Duration timeElapsed = Duration.between(start, end);

                model.setProcessingTime(String.valueOf(timeElapsed.toMinutes()));
                model.setChefID(id);

                new OrderReport(new javax.swing.JFrame(), true, model).setVisible(true);

                orderController.saveOrder(model);
                button.setText("Take Order");
                button.kBackGroundColor = new Color(51, 204, 0);
                button.kHoverColor = new Color(0, 153, 51);
                button.kPressedColor = new Color(0, 102, 0);
                available = true;
                orderController.notifyReceivers();
            }
        } catch (RemoteException ex) {
            Logger.getLogger(Chef.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            orderController.removeReceiver(orderReceiver);
        } catch (RemoteException ex) {
            Logger.getLogger(Chef.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Chef(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KButton button;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblQty;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(OrderModel order) throws RemoteException {
        if (available) {
            if (order != null) {
                button.setEnabled(true);
                lblQty.setText(order.getQty());
                model = order;
            } else {
                lblQty.setText("0");
                button.setEnabled(false);
            }
        }
    }
}
